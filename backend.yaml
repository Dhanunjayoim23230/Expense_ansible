- name: expense backend configuration
  hosts: backend
  become: yes
  tasks:
  - name: disable nodejs module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enalbe nodejs module
    ansible.builtin.command: dnf module enable nodejs:20 -y

  
  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: installed
    loop:
    - nodejs
    - mysql

  - name: add user expense
    ansible.builtin.user:
      name: expense
  

  - name: directory creation
    ansible.builtin.file:
      path: /app
      state: directory
      
  - name: download application code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unarchive backup zip file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  

  - name: Copy backend service 
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
      

  - name: backend daemon reload
    ansible.builtin.systemd:
      name: backend
      state: reloaded
      state: started

  - name: install python libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      state: present
      executable: pip3.9
    loop:
      - PyMySQL
      - cryptography
  

  - name: install mysql
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.dawscloud.tech
      target: /app/schema/backend.sql

  - name: backend start the service
    ansible.builtin.systemd:
      name: backend
      state: restarted
      daemon_reload: true
      enalbed: true